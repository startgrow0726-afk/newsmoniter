"""Initial database schema

Revision ID: a08328f3063f
Revises: 
Create Date: 2025-09-21 21:48:53.235532

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a08328f3063f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clusters',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('severity', sa.Text(), nullable=False),
    sa.Column('first_seen', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=False),
    sa.Column('article_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clusters_last_seen'), 'clusters', ['last_seen'], unique=False)
    op.create_table('daily_recap',
    sa.Column('ticker', sa.Text(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('top_events', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('perf_vs_sector', sa.Float(), nullable=True),
    sa.Column('perf_vs_index', sa.Float(), nullable=True),
    sa.Column('recap_text', sa.Text(), nullable=True),
    sa.Column('watch_points', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.Column('risk_notes', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('ticker', 'date')
    )
    op.create_table('intraday_explain',
    sa.Column('ticker', sa.Text(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('move_pct', sa.Float(), nullable=True),
    sa.Column('vwap', sa.Float(), nullable=True),
    sa.Column('sector_corr', sa.Float(), nullable=True),
    sa.Column('index_corr', sa.Float(), nullable=True),
    sa.Column('cause_company_pct', sa.Integer(), nullable=True),
    sa.Column('cause_sector_pct', sa.Integer(), nullable=True),
    sa.Column('cause_macro_pct', sa.Integer(), nullable=True),
    sa.Column('cause_flow_pct', sa.Integer(), nullable=True),
    sa.Column('sentiment_label', sa.Text(), nullable=True),
    sa.Column('one_day_view', sa.Text(), nullable=True),
    sa.Column('short_term_view', sa.Text(), nullable=True),
    sa.Column('mid_long_view', sa.Text(), nullable=True),
    sa.Column('evidence', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('generated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('ticker', 'date')
    )
    op.create_table('markets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('timezone', sa.Text(), nullable=False),
    sa.Column('open_time', sa.String(), nullable=False),
    sa.Column('close_time', sa.String(), nullable=False),
    sa.Column('country_code', sa.String(length=2), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('sources',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('domain', sa.Text(), nullable=False),
    sa.Column('trust', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('domain')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('pw_hash', sa.Text(), nullable=False),
    sa.Column('tz', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('companies',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('tickers', postgresql.ARRAY(sa.Text()), nullable=False),
    sa.Column('aliases', postgresql.ARRAY(sa.Text()), nullable=False),
    sa.Column('context', postgresql.ARRAY(sa.Text()), nullable=False),
    sa.Column('negative', postgresql.ARRAY(sa.Text()), nullable=False),
    sa.Column('country', sa.Text(), nullable=True),
    sa.Column('market_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['markets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('feeds',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('source_id', sa.BigInteger(), nullable=True),
    sa.Column('topic', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('etag', sa.Text(), nullable=True),
    sa.Column('last_modified', sa.Text(), nullable=True),
    sa.Column('last_checked', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_table('user_prefs',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('quiet_hours', postgresql.INT4RANGE(), nullable=True),
    sa.Column('severity_min', sa.Text(), nullable=False),
    sa.Column('source_weights', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('topic_weights', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('company_weights', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('articles',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('canonical_url', sa.Text(), nullable=True),
    sa.Column('url_hash', sa.BigInteger(), nullable=False),
    sa.Column('source_domain', sa.Text(), nullable=False),
    sa.Column('source_id', sa.BigInteger(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('lang', sa.String(length=5), nullable=True),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index(op.f('ix_articles_published_at'), 'articles', ['published_at'], unique=False)
    op.create_index(op.f('ix_articles_url_hash'), 'articles', ['url_hash'], unique=False)
    op.create_table('company_context',
    sa.Column('company_id', sa.BigInteger(), nullable=False),
    sa.Column('customer_score', sa.Integer(), nullable=True),
    sa.Column('supply_score', sa.Integer(), nullable=True),
    sa.Column('policy_risk_pct', sa.Integer(), nullable=True),
    sa.Column('competition_pct', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_table('company_relations',
    sa.Column('company_id', sa.BigInteger(), nullable=False),
    sa.Column('counterparty_id', sa.BigInteger(), nullable=False),
    sa.Column('relation_type', sa.Text(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('first_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['counterparty_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('company_id', 'counterparty_id', 'relation_type')
    )
    op.create_table('user_watchlist',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('company_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'company_id')
    )
    op.create_table('article_entities',
    sa.Column('article_id', sa.BigInteger(), nullable=False),
    sa.Column('company_id', sa.BigInteger(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('matched', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('article_id', 'company_id')
    )
    op.create_table('article_links',
    sa.Column('article_id', sa.BigInteger(), nullable=False),
    sa.Column('link_type', sa.Text(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('article_id', 'link_type', 'url')
    )
    op.create_table('article_meta',
    sa.Column('article_id', sa.BigInteger(), nullable=False),
    sa.Column('category', sa.Text(), nullable=False),
    sa.Column('topic_tags', postgresql.ARRAY(sa.Text()), nullable=False),
    sa.Column('related_event', sa.Text(), nullable=True),
    sa.Column('sentiment', sa.Float(), nullable=False),
    sa.Column('positivity_pct', sa.Integer(), nullable=False),
    sa.Column('accuracy_pct', sa.Integer(), nullable=False),
    sa.Column('importance_pct', sa.Integer(), nullable=False),
    sa.Column('impact_level', sa.Text(), nullable=False),
    sa.Column('severity', sa.Text(), nullable=False),
    sa.Column('volatility_hint', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('article_id')
    )
    op.create_index(op.f('ix_article_meta_importance_pct'), 'article_meta', ['importance_pct'], unique=False)
    op.create_table('cluster_articles',
    sa.Column('cluster_id', sa.Text(), nullable=False),
    sa.Column('article_id', sa.BigInteger(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['cluster_id'], ['clusters.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('cluster_id', 'article_id')
    )
    op.create_table('deliveries',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('article_id', sa.BigInteger(), nullable=False),
    sa.Column('cluster_id', sa.Text(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('seen', sa.Boolean(), nullable=False),
    sa.Column('clicked', sa.Boolean(), nullable=False),
    sa.Column('saved', sa.Boolean(), nullable=False),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'article_id')
    )
    op.create_index('idx_deliveries_user_time', 'deliveries', ['user_id', 'delivered_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_deliveries_user_time', table_name='deliveries')
    op.drop_table('deliveries')
    op.drop_table('cluster_articles')
    op.drop_index(op.f('ix_article_meta_importance_pct'), table_name='article_meta')
    op.drop_table('article_meta')
    op.drop_table('article_links')
    op.drop_table('article_entities')
    op.drop_table('user_watchlist')
    op.drop_table('company_relations')
    op.drop_table('company_context')
    op.drop_index(op.f('ix_articles_url_hash'), table_name='articles')
    op.drop_index(op.f('ix_articles_published_at'), table_name='articles')
    op.drop_table('articles')
    op.drop_table('user_prefs')
    op.drop_table('feeds')
    op.drop_table('companies')
    op.drop_table('users')
    op.drop_table('sources')
    op.drop_table('markets')
    op.drop_table('intraday_explain')
    op.drop_table('daily_recap')
    op.drop_index(op.f('ix_clusters_last_seen'), table_name='clusters')
    op.drop_table('clusters')
    # ### end Alembic commands ###
